---
- name: Remove existing nginx_config from Docker Swarm
  community.docker.docker_config:
    name: nginx_config
    state: absent

- name: Create Docker Swarm config from inline content
  community.docker.docker_config:
    name: nginx_config
    data: |
      events {}
      
      http {
        # Max length of request line (e.g., GET /path?query=...)
        large_client_header_buffers 8 64k;
        # Increase buffer for large headers
        proxy_buffers 16 64k;
        proxy_buffer_size 128k;
        proxy_busy_buffers_size 128k;

        # redirect all http -> https
        server {
          listen 80;
          server_name _;
          return 301 https://$host$request_uri;
        }
      
        # https with one cert
        server {
          listen 443 ssl;
          server_name _;
      
          ssl_certificate     /run/secrets/cert;
          ssl_certificate_key /run/secrets/cert_key;

          # Jenkins on /jenkins
          location /jenkins {
              proxy_pass          http://jenkins:8080/jenkins/;
              proxy_set_header    Host $host;
              proxy_set_header    X-Real-IP $remote_addr;
              proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header    X-Forwarded-Proto $scheme;
      
              # Handle redirects correctly
              proxy_redirect      http://jenkins:8080/jenkins/ /jenkins/;
          }
        server {
          listen 8081;
          server_name _;
          return 301 https://$host:8443$request_uri;
        }
        server {
          listen 8443 ssl;
          server_name _;

          ssl_certificate     /run/secrets/cert;
          ssl_certificate_key /run/secrets/cert_key;

          location / {
              proxy_pass http://nexus:8081/;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
          }
        }
        server {
          listen 10443 ssl;
          server_name _;

          ssl_certificate     /run/secrets/cert;
          ssl_certificate_key /run/secrets/cert_key;
            # Grafana
            location / {
              proxy_pass http://grafana:3000;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;

              # Optional for Grafana dashboards
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection "upgrade";
            }
          }
        }
      }
    force: true
