version: '3.8'

services:
  grafana:
    image: grafana/grafana:12.1.0-ubuntu
    depends_on:
      - keycloak_keycloak
    user: "${USER_UID}:${USER_GID}"
    environment:
      - GF_LOG_FILTERS=provisioning.dashboard:debug
      - GF_INSTALL_PLUGINS=yesoreyeram-infinity-datasource
      - GF_AUTH_GENERIC_OAUTH_TLS_SKIP_VERIFY_INSECURE=true
      #- GF_SECURITY_ADMIN_USER=admin
      #- GF_SECURITY_ADMIN_PASSWORD__FILE=/run/secrets/grafana_admin_password
      #- GF_USERS_HOME_PAGE=/d/d4acfa1d-0701-4c76-842e-a34bde89f50a/ByCategory
      - GF_NEWS_NEWS_FEED_ENABLED=false
      #- GF_SECURITY_ADMIN_API_KEY=bootstrap-admin-key
      # Keycloak
      - GF_SERVER_PROTOCOL=http
      - GF_SERVER_HTTP_PORT=3000
      - GF_SERVER_ROOT_URL=http://${GRAFANA_HOSTNAME}:${GRAFANA_PORT}/grafana
      #- GF_SERVER_CERT_FILE=/run/secrets/cert
      #- GF_SERVER_CERT_KEY=/run/secrets/cert_key
      - GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH=${GRAFANA_ROLE_MAPPING}
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_OAUTH_AUTO_LOGIN=true
      - GF_AUTH_GENERIC_OAUTH_ENABLED=true
      - GF_AUTH_GENERIC_OAUTH_NAME=Keycloak
      - GF_AUTH_GENERIC_OAUTH_CLIENT_ID=grafana
      - GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET=${KC_CLIENT_SECRET_GRAFANA}
      - GF_AUTH_GENERIC_OAUTH_SCOPES="openid profile email"
      - GF_AUTH_GENERIC_OAUTH_AUTH_URL=https://${KC_HOSTNAME}:${KC_PORT}/realms/charger/protocol/openid-connect/auth
      - GF_AUTH_GENERIC_OAUTH_TOKEN_URL=https://${KC_HOSTNAME}:${KC_PORT}/realms/charger/protocol/openid-connect/token
      - GF_AUTH_GENERIC_OAUTH_API_URL=https://${KC_HOSTNAME}:${KC_PORT}/realms/charger/protocol/openid-connect/userinfo
    volumes:
        - /srv/grafana/data/:/var/lib/grafana
    networks:
      - home-net
    #healthcheck:
    #  test: ["CMD", "bash", "-c", "curl -k -sf https://${GRAFANA_HOSTNAME}:${GRAFANA_PORT}/api/health || exit 1"]
    #  interval: 30s
    #  timeout: 5s
    #  retries: 5
    #  start_period: 30s
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.database == true
      restart_policy:
        condition: on-failure

networks:
  home-net:
    external: true